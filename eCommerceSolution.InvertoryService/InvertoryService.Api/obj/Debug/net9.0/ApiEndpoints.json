[
  {
    "ContainingType": "InventoryService.Api.Endpoints.InventoryEndpoints",
    "Method": "Add",
    "RelativePath": "api/inventories/",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "InventoryService.Core.DTOs.Inventories.InventoryRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Inventories"
    ]
  },
  {
    "ContainingType": "InventoryService.Api.Endpoints.InventoryEndpoints",
    "Method": "GetAll",
    "RelativePath": "api/inventories/",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Inventories"
    ]
  },
  {
    "ContainingType": "InventoryService.Api.Endpoints.InventoryEndpoints",
    "Method": "GetById",
    "RelativePath": "api/inventories/{id:guid}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Inventories"
    ]
  },
  {
    "ContainingType": "InventoryService.Api.Endpoints.InventoryEndpoints",
    "Method": "Update",
    "RelativePath": "api/inventories/{id:guid}/update-reorderlevel",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "InventoryService.Core.DTOs.Inventories.UpdateReorderLevelRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Inventories"
    ]
  },
  {
    "ContainingType": "InventoryService.Api.Endpoints.InventoryEndpoints",
    "Method": "GetByProductId",
    "RelativePath": "api/inventories/{productId:guid}/by-product",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Inventories"
    ]
  },
  {
    "ContainingType": "InventoryService.Api.Endpoints.InventoryEndpoints",
    "Method": "GetBySKU",
    "RelativePath": "api/inventories/{sku}/by-sku",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sku",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Inventories"
    ]
  },
  {
    "ContainingType": "InventoryService.Api.Endpoints.InventoryEndpoints",
    "Method": "GetByWarehouse",
    "RelativePath": "api/inventories/by-warehouse/{warehouseId:guid}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "warehouseId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Inventories"
    ]
  },
  {
    "ContainingType": "InventoryService.Api.Endpoints.InventoryEndpoints",
    "Method": "GetLowStockInventories",
    "RelativePath": "api/inventories/low-stock",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Inventories"
    ]
  },
  {
    "ContainingType": "InventoryService.Api.Endpoints.ReservationEndpoints",
    "Method": "GetAll",
    "RelativePath": "api/reservations/",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Reservations"
    ]
  },
  {
    "ContainingType": "InventoryService.Api.Endpoints.ReservationEndpoints",
    "Method": "GetById",
    "RelativePath": "api/reservations/{id:guid}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Reservations"
    ]
  },
  {
    "ContainingType": "InventoryService.Api.Endpoints.ReservationEndpoints",
    "Method": "Confirm",
    "RelativePath": "api/reservations/{id:guid}/confirm",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Reservations"
    ]
  },
  {
    "ContainingType": "InventoryService.Api.Endpoints.ReservationEndpoints",
    "Method": "Released",
    "RelativePath": "api/reservations/{id:guid}/released",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Reservations"
    ]
  },
  {
    "ContainingType": "InventoryService.Api.Endpoints.ReservationEndpoints",
    "Method": "Add",
    "RelativePath": "api/reservations/{inventoryId:guid}/",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "inventoryId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "InventoryService.Core.DTOs.Reservations.ReservationRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Reservations"
    ]
  },
  {
    "ContainingType": "InventoryService.Api.Endpoints.ReservationEndpoints",
    "Method": "GetByInventoryId",
    "RelativePath": "api/reservations/by-inventory/{inventoryId:guid}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "inventoryId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Reservations"
    ]
  },
  {
    "ContainingType": "InventoryService.Api.Endpoints.WarehouseEndpoint",
    "Method": "AddWarehouse",
    "RelativePath": "api/warehouses/",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "InventoryService.Core.DTOs.Warehouses.WarehouseRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Warehouses"
    ]
  },
  {
    "ContainingType": "InventoryService.Api.Endpoints.WarehouseEndpoint",
    "Method": "GetWarehouses",
    "RelativePath": "api/warehouses/",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Warehouses"
    ]
  },
  {
    "ContainingType": "InventoryService.Api.Endpoints.WarehouseEndpoint",
    "Method": "UpdateWarehouse",
    "RelativePath": "api/warehouses/{id:guid}",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "InventoryService.Core.DTOs.Warehouses.WarehouseRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Warehouses"
    ]
  },
  {
    "ContainingType": "InventoryService.Api.Endpoints.WarehouseEndpoint",
    "Method": "DeleteWarehouse",
    "RelativePath": "api/warehouses/{id:guid}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Warehouses"
    ]
  },
  {
    "ContainingType": "InventoryService.Api.Endpoints.WarehouseEndpoint",
    "Method": "GetWarehouse",
    "RelativePath": "api/warehouses/{id:guid}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Warehouses"
    ]
  }
]